Now it’s time to clone your repository from GitHub onto your computer with git clone followed by the URL you copied in the last step. The full command should look similar to git clone git@github.com:USER-NAME/REPOSITORY-NAME.git. If your URL looks like https://github.com/USER-NAME/REPOSITORY-NAME.git, you have selected the HTTPS option, not the required SSH option.

That’s it! You have successfully connected the repository you created on GitHub to your local machine. To test this, you can cd into the new git_test folder that was downloaded and then enter git remote -v on your command line.

git add (<filename> or <.> for all)*adds to staging area*
git commit -m (<filename> or <all>) *commits changes*
git commit -m "Edit README.md and hello_world.txt" *adds a description to commit*
git status *check status of above*

git log *shows commits, author*
git push, publish local commits to github.
git push origin main *pushes to main branch, dangerous in real environment*;




GIT CHEATSHEET
https://www.theodinproject.com/lessons/foundations-git-basics#cheatsheet

Commands related to a remote repository:
git clone git@github.com:USER-NAME/REPOSITORY-NAME.git
git push or git push origin main (Both accomplish the same goal in this context)
Commands related to the workflow:
git add .
git commit -m "A message describing what you have done to make this snapshot different"
Commands related to checking status or log history
git status
git log
The basic Git syntax is program | action | destination.

For example,

git add . is read as git | add | ., where the period represents everything in the current directory;
git commit -m "message" is read as git | commit -m | "message"; and
git status is read as git | status | (no destination).